
{mapping, "smq.grpc.auth.host",     "smq_grpc.auth_host",    [{datatype, string}]}.
{mapping, "smq.grpc.auth.port",     "smq_grpc.auth_port",    [{datatype, integer}]}.
{mapping, "smq.grpc.clients.host",  "smq_grpc.clients_host", [{datatype, string}]}.
{mapping, "smq.grpc.clients.port",  "smq_grpc.clients_port", [{datatype, integer}]}.
{mapping, "smq.grpc.channels.host", "smq_grpc.channels_host",[{datatype, string}]}.
{mapping, "smq.grpc.channels.port", "smq_grpc.channels_port",[{datatype, integer}]}.


{translation, "smq_grpc.config",
 fun(Conf) ->
     #{
         auth => #{
             host => list_to_binary(cuttlefish:conf_get("smq.grpc.auth.host", Conf)),
             port => cuttlefish:conf_get("smq.grpc.auth.port", Conf)
         },
         clients => #{
             host => list_to_binary(cuttlefish:conf_get("smq.grpc.clients.host", Conf)),
             port => cuttlefish:conf_get("smq.grpc.clients.port", Conf)
         },
         channels => #{
             host => list_to_binary(cuttlefish:conf_get("smq.grpc.channels.host", Conf)),
             port => cuttlefish:conf_get("smq.grpc.channels.port", Conf)
         }
     }
 end}.


{mapping, "rabbitmq_auth_backend_supermq.internal_ip_ports",
         "rabbitmq_auth_backend_supermq.internal_ip_ports",
         [{datatype, string}]}.

{translation, "rabbitmq_auth_backend_supermq.internal_ip_ports",
 fun(Conf) ->
     case cuttlefish:conf_get("rabbitmq_auth_backend_supermq.internal_ip_ports", Conf, undefined) of
         undefined -> [];
         Value -> rabbitmq_auth_backend_supermq_config_parser:parse_ip_port_list(Value)
     end
 end}.
